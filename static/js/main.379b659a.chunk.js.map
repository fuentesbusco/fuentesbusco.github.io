{"version":3,"sources":["components/Filters.js","components/DataList.js","components/Detail.js","components/Home.js","components/Error.js","App.js","index.js"],"names":["Filters","props","useState","abilities","setAbilities","types","setTypes","generations","setGenerations","setError","error","useEffect","source","axios","CancelToken","a","get","cancelToken","token","result","data","results","isCancel","console","log","response","request","getTypes","cancel","getGenerations","FormGroup","Card","className","classes","root","style","margin","CardContent","Typography","title","color","gutterBottom","Grid","container","spacing","item","xs","md","lg","formControl","id","Select","labelId","onChange","event","handleChangeType","target","value","typeUrl","MenuItem","primarytext","map","type","url","name","handleChangeGeneration","generationUrl","generation","handleChangeAbility","abilityUrl","ability","Button","size","variant","onClick","handleClickFilter","button","DataList","CardHeader","avatar","Avatar","aria-label","src","default_type_icon","default_type","subheader","hp","cardTitle","cardSubheader","CardMedia","media","image","sprites","other","dream_world","front_default","component","join","CardActions","clickDetailsHandler","Detail","Dialog","open","onClose","handleClose","aria-labelledby","aria-describedby","maxWidth","fullWidth","DialogTitle","DialogContent","dividers","DialogContentText","justify","textAlign","verticalAlign","alt","List","ListItem","padding","ListItemText","primary","base_experience","secondary","height","DialogActions","autoFocus","useStyles","makeStyles","theme","backgroundSize","width","cardWithoutBorder","border","boxShadow","minWidth","display","wrap","backdrop","zIndex","drawer","backgroundColor","fontSize","fontWeight","overflow","textOverflow","filterDefautlValue","Home","setData","setOpen","openBackdrop","setOpenBackdrop","dialogData","setDialogData","setTypeUrl","setGenerationUrl","setAbilityUrl","search","setSearch","itemList","requestUrl","pokemon","pokemon_species","i","replace","detail","charAt","toUpperCase","slice","stats","stat","base_stat","push","getData","clearFilterValues","direction","Alert","severity","Paper","elevation","Math","random","Backdrop","CircularProgress","Error","alignItems","minHeight","marginTop","marginLeft","marginRight","App","AppBar","position","Toolbar","Container","disableGutters","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.379b659a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormGroup';\nimport InputLabel from '@material-ui/core/FormGroup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nconst Filters = props => {\n    const [abilities, setAbilities] = useState([]);\n    const [types, setTypes] = useState([]);\n    const [generations, setGenerations] = useState([]);\n\n    const setError = error => {\n        props.setError(error);\n    }\n\n    useEffect(() => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        const getTypes = async () => {\n            try {\n                let result = await axios.get(`https://pokeapi.co/api/v2/ability?limit=400`, { cancelToken: source.token });\n                setAbilities(result.data.results);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.log(\"axios cancelled\");\n                } else {\n                    if (error.response) {\n                        setError(\"Ha ocurrido un error en el servidor\");\n                    } else if (error.request) {\n                        setError(\"Verifique la conexión a internet\");\n                    } else {\n                        setError(\"Error al cargar datos\");\n                    }\n                }\n            }\n        }\n\n        getTypes();\n\n        return () => {\n            source.cancel();\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        const getTypes = async () => {\n            try {\n                let result = await axios.get(`https://pokeapi.co/api/v2/type`, { cancelToken: source.token });\n                setTypes(result.data.results);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.log(\"axios cancelled\");\n                } else {\n                    if (error.response) {\n                        setError(\"Ha ocurrido un error en el servidor\");\n                    } else if (error.request) {\n                        setError(\"Verifique la conexión a internet\");\n                    } else {\n                        setError(\"Error al cargar datos\");\n                    }\n                }\n            }\n        }\n\n        getTypes();\n\n        return () => {\n            source.cancel();\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        const getGenerations = async () => {\n            try {\n                let result = await axios.get(`https://pokeapi.co/api/v2/generation`, { cancelToken: source.token });\n                setGenerations(result.data.results);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.log(\"axios cancelled\");\n                } else {\n                    if (error.response) {\n                        setError(\"Ha ocurrido un error en el servidor\");\n                    } else if (error.request) {\n                        setError(\"Verifique la conexión a internet\");\n                    } else {\n                        setError(\"Error al cargar datos\");\n                    }\n                }\n            }\n        }\n\n        getGenerations();\n\n        return () => {\n            source.cancel();\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChangeType = (event) => {\n        props.handleChangeType(event.target.value);\n    };\n\n    const handleChangeGeneration = (event) => {\n        props.handleChangeGeneration(event.target.value);\n    };\n\n    const handleChangeAbility = (event) => {\n        props.handleChangeAbility(event.target.value);\n    };\n\n    return (\n        <FormGroup>\n            <Card className={props.classes.root} style={{margin: 0}}>\n                <CardContent>\n                    <Typography className={props.classes.title} color=\"textSecondary\" gutterBottom>\n                        Filters (Because API limitations you must choose only one filter at the time)\n                    </Typography>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12} md={6} lg={3}>\n                            <FormControl margin=\"none\" className={props.classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    onChange={handleChangeType}\n                                    value={props.typeUrl}\n                                >\n                                    <MenuItem key={\"all\"} value={\"all\"} primarytext={\"all\"}>\n                                        all\n                                    </MenuItem>\n                                    {\n                                        types && types.map((type) =>\n                                            <MenuItem key={type.name} value={type.url} primarytext={type.name}>\n                                                {type.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12} md={6} lg={3}>\n                            <FormControl margin=\"none\" className={props.classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Generation</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    onChange={handleChangeGeneration}\n                                    value={props.generationUrl}\n                                >\n                                    <MenuItem key={\"all\"} value={'all'} primarytext={\"all\"}>\n                                        all\n                                    </MenuItem>\n                                    {\n                                        generations && generations.map((generation) =>\n                                            <MenuItem key={generation.name} value={generation.url} primarytext={generation.name}>\n                                                {generation.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12} md={6} lg={3}>\n                            <FormControl margin=\"none\" className={props.classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Ability</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    onChange={handleChangeAbility}\n                                    value={props.abilityUrl}\n                                >\n                                    <MenuItem key={\"all\"} value={'all'} primarytext={\"all\"}>\n                                        all\n                                    </MenuItem>\n                                    {\n                                        abilities && abilities.map((ability) =>\n                                            <MenuItem key={ability.name} value={ability.url} primarytext={ability.name}>\n                                                {ability.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    \n                        <Grid item xs={12} md={6} lg={3}>\n                            <FormControl margin=\"none\" className={props.classes.formControl}>\n                                <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={props.handleClickFilter} className={props.classes.button}>Ok</Button>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </FormGroup>\n    );\n}\n\nexport default Filters;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\n\nconst DataList = props => {\n    return (\n        <Grid item xs={12} md={4} lg={3}>\n            <Card className={props.classes.root}>\n                <CardHeader\n                    avatar={\n                    <Avatar aria-label=\"pokemon\" className={props.classes.avatar} src={props.item.default_type_icon} title={props.item.default_type} />\n                    }\n                    title={props.item.name}\n                    subheader={props.item.hp}\n                    classes={{\n                        title: props.classes.cardTitle,\n                        subheader: props.classes.cardSubheader,\n                    }} \n                />\n                <CardMedia\n                className={props.classes.media}\n                image={\n                    props.item.sprites.other.dream_world.front_default !== null\n                        ? props.item.sprites.other.dream_world.front_default\n                        : props.item.sprites.other.[\"official-artwork\"].front_default\n                }\n                title={props.item.name}\n                />\n                <CardContent>\n                \n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{props.item.types.join(\", \")}</Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" className={props.classes.button} onClick={() => props.clickDetailsHandler(props.item)}>\n                        Details\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n\nexport default DataList;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst Detail = props => {\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth='md'\n            fullWidth={true}\n        >\n            { props.item && \n                <DialogTitle id=\"alert-dialog-title\">\n                    <Typography className={props.classes.cardTitle}>{props.item.name}</Typography>                            \n                    <Typography className={props.classes.cardSubheader} variant=\"body2\" color=\"textSecondary\" component=\"p\">{props.item.hp}</Typography>\n                </DialogTitle> \n            }\n            <DialogContent dividers>\n            <DialogContentText id=\"alert-dialog-description\" component=\"div\">\n                <Grid container justify=\"center\">\n                    { props.item && props.item.sprites &&\n                    <Grid item xs={12} md={6} lg={6} style={{ textAlign: 'center', verticalAlign: 'center' }}>\n                        <img src={\n                                props.item && props.item.sprites && props.item.sprites.other && props.item.sprites.other.dream_world.front_default !== null\n                                    ? props.item.sprites.other.dream_world.front_default\n                                    : props.item.sprites.other.[\"official-artwork\"].front_default\n                            }\n                            style={{ maxWidth: '250px' }}\n                            alt={`${props.item.name}`}\n                        />\n                    </Grid>\n                    }\n                    <Grid item xs={12} md={6} lg={6}>\n                        <List>\n                            <ListItem style={{ padding: 0 }}>\n                                <ListItemText primary={`${props.item.base_experience} exp`} secondary=\"Base Experience\" />\n                            </ListItem>\n                            <ListItem style={{ padding: 0 }}>\n                                <ListItemText primary={`${props.item.height} in`} secondary=\"Height\" />\n                            </ListItem>\n                            <ListItem style={{ padding: 0 }}>\n                                <ListItemText primary={\n                                    props.item && props.item.types &&\n                                        props.item.types.join(\", \")\n                                    } secondary=\"Types\" />\n                            </ListItem>\n                            <ListItem style={{ padding: 0 }}>\n                                <ListItemText primary={\n                                    props.item && props.item.abilities &&\n                                        props.item.abilities.join(\", \")\n                                    } secondary=\"Abilities\" />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                </Grid>\n            </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n            <Button size=\"small\" onClick={props.handleClose} color=\"primary\" autoFocus className={props.classes.button}>\n                Close\n            </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default Detail;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Filters from './Filters';\nimport DataList from './DataList';\nimport Detail from './Detail';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      margin: '5%',\n    },\n    media: {\n      height: 140,\n      backgroundSize: 'contain !important',\n    },\n    avatar: {\n        width: theme.spacing(3.5),\n        height: theme.spacing(3.5),\n      },\n      cardWithoutBorder: {\n        border: \"none\",\n        boxShadow: \"none\",\n        minWidth: 275,\n    },\n    formControl: {\n        margin: 0,\n        fullWidth: true,\n        display: 'flex',\n        wrap: 'nowrap',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n      },\n    button: {\n        backgroundColor: 'rgb(255, 80, 0)',\n        '&:hover': {\n            backgroundColor: 'rgb(255, 80, 0)',\n        },\n        color: 'white',\n    },\n    cardSubheader: {\n        fontSize: '14px',\n    },\n    cardTitle: {\n        fontWeight: '600',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: '-webkit-box',\n    },\n  }));\n\nconst filterDefautlValue = \"all\";\n\nconst Home = props => {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [openBackdrop, setOpenBackdrop] = useState(true);\n    const [error, setError] = useState(null);\n    const [dialogData, setDialogData] = useState({});\n    const [typeUrl, setTypeUrl] = useState(\"all\");\n    const [generationUrl, setGenerationUrl] = useState(\"all\");\n    const [abilityUrl, setAbilityUrl] = useState(\"all\");\n    const [search, setSearch] = useState(null); \n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        setError(null);\n\n        const getData = async () => {\n            try {\n                const itemList = [];\n                let requestUrl = `https://pokeapi.co/api/v2/pokemon?limit=10&offset=0`;\n                if (typeUrl != null && typeUrl !== 'all') {\n                    requestUrl = typeUrl;\n                } else if (generationUrl != null && generationUrl !== 'all') {\n                    requestUrl = generationUrl;\n                } else if (abilityUrl != null && abilityUrl !== 'all') {\n                    requestUrl = abilityUrl;\n                }\n\n                let result = await axios.get(requestUrl, { cancelToken: source.token });\n                let results = [];\n\n                if (typeUrl != null && typeUrl !== 'all') {\n                    results = result.data.pokemon;\n                } else if (generationUrl != null && generationUrl !== 'all') {\n                    results = result.data.pokemon_species;\n                } else if (abilityUrl != null && abilityUrl !== 'all') {\n                    results = result.data.pokemon;\n                } else {\n                    results = result.data.results;\n                }\n\n                if (results) {\n                    let i = 0;\n                    for(let item of results) {\n                        if (i === 10) {\n                            break;\n                        }\n                        if (typeUrl != null && typeUrl !== 'all') {\n                            item = item.pokemon;\n                        } else if (abilityUrl != null && abilityUrl !== 'all') {\n                            item = item.pokemon;\n                        } else if (generationUrl != null && generationUrl !== 'all') {\n                            item.url = item.url.replace(\"-species\", \"\");\n                        }\n                        let detail = await axios.get(item.url, { cancelToken: source.token });\n                        detail.data.name = detail.data.name.charAt(0).toUpperCase() + detail.data.name.slice(1);\n\n                        for (const stat of detail.data.stats) {\n                            if (stat.stat.name === 'hp') {\n                                detail.data.hp = `HP ${stat.base_stat}`;\n                            }\n                        }\n\n                        const types = [];\n                        for (const type of detail.data.types) {\n                            type.type.name = type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1);\n                            types.push(type.type.name);\n                            if (!detail.data.default_type) {\n                                detail.data.default_type = type.type.name;\n                                detail.data.default_type_icon = `/static/images/types/Icon_${type.type.name}.png`;\n                            }\n                        }\n                        detail.data.types = types;\n\n                        const abilities = [];\n                        for (const ability of detail.data.abilities) {\n                            ability.ability.name = ability.ability.name.charAt(0).toUpperCase() + ability.ability.name.slice(1);\n                            abilities.push(ability.ability.name);\n                        }\n                        detail.data.abilities = abilities;\n\n                        itemList.push(detail.data);\n                        i++;\n                    }\n                }\n\n                setData(itemList);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.log(\"axios cancelled\");\n                } else {\n                    if (error.response) {\n                        setError(\"Ha ocurrido un error en el servidor\");\n                    } else if (error.request) {\n                        setError(\"Verifique la conexión a internet\");\n                    } else {\n                        setError(\"Error al cargar datos\");\n                    }\n                }\n            }\n            setOpenBackdrop(false);\n        }\n\n        getData();\n\n        return () => {\n            source.cancel();\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search]);\n\n    const clickDetailsHandler = (item) => {\n        setOpen(true);\n        setDialogData(item);\n    }\n\n    const clearFilterValues = () => {\n        setTypeUrl(filterDefautlValue);\n        setGenerationUrl(filterDefautlValue);\n        setAbilityUrl(filterDefautlValue);\n    }\n\n    const handleChangeType = (url) => {\n        clearFilterValues();\n        setTypeUrl(url);\n    };\n\n    const handleChangeGeneration = (url) => {\n        clearFilterValues();\n        setGenerationUrl(url);\n    };\n\n    const handleChangeAbility = (url) => {\n        clearFilterValues();\n        setAbilityUrl(url);\n    };\n\n    const handleClickFilter = () => {\n        setOpenBackdrop(true);\n        setData([]);\n        setSearch(Math.random());\n    }\n\n    return (\n        <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        > \n            <Grid container spacing={4}>\n                {\n                    error &&\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Alert severity=\"error\">{error}</Alert>\n                    </Grid>\n                }\n                <Grid item xs={12} md={12} lg={12}>\n                    <Paper elevation={3}>\n                        <Filters \n                            handleClickFilter={handleClickFilter} \n                            handleChangeType={handleChangeType} \n                            handleChangeGeneration={handleChangeGeneration} \n                            handleChangeAbility={handleChangeAbility} \n                            typeUrl={typeUrl}\n                            generationUrl={generationUrl}\n                            abilityUrl={abilityUrl}\n                            classes={classes}\n                            setError={setError}\n                        />\n                    </Paper>\n                </Grid>\n                { data && data.map((item) =>\n                    <DataList \n                        item={item} \n                        key={item.name}\n                        clickDetailsHandler={clickDetailsHandler} \n                        classes={classes}\n                    />\n                )}\n                <Detail \n                    item={dialogData} \n                    open={open} \n                    handleClose={handleClose}\n                    classes={classes} />\n            </Grid>\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </Grid>\n    );\n}\n\nexport default Home;","import React, { useEffect } from 'react';\n//import axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst Error = props => {\n    //const [data, setData] = useState(null);\n    //const [error, setError] = useState(null);\n\n    useEffect(() => {\n        /*const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        const getMachineCode = async () => {\n            try {\n                let result = await axios.get(`sensors/machine_code.txt`, { cancelToken: source.token });\n                if (result.data) {\n                    result.data = result.data.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n                }\n                localStorage.setItem('machineCode', result.data);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.log(\"axios cancelled\");\n                } else {\n                        if (error.response) {\n                            setError(\"Ha ocurrido un error en el servidor\");\n                        } else if (error.request) {\n                            setError(\"Verifique la conexión a internet\");\n                        } else {\n                            setError(\"Error al cargar datos\");\n                        }\n                    }\n            }\n        }\n\n        getMachineCode();\n\n        return () => {\n            source.cancel();\n        }\n    */\n    },[]);\n\n    useEffect(() => {\n        //const CancelToken = axios.CancelToken;\n        //const source = CancelToken.source();\n    }, []);\n\n    return (\n        <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh', height: \"100vh\", backgroundSize: 'cover' }}\n        >\n            <Grid item xs={12}>\n                <Typography style={{ textAlign: 'center', color: 'white', fontSize: '2.8em' }}>Error</Typography>\n            </Grid>   \n        </Grid>\n    );\n}\n\nexport default Error;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Home from './components/Home';\nimport Error from './components/Error';\n\nconst useStyles = makeStyles({\n  root: {\n      marginTop: 0,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 0,\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n            <AppBar position=\"static\" style={{ backgroundColor: '#ff5000' }}>\n                <Toolbar>\n                <Typography variant=\"h6\">\n                        Houmdex\n                </Typography>\n                </Toolbar>\n            </AppBar>\n            <Container maxWidth=\"xl\" disableGutters={false} className={classes.root}>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route component={Error}/>\n                </Switch>\n            </Container>\n        </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}